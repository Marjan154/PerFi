{"ast":null,"code":"var _jsxFileName = \"/Users/uks/Desktop/PerFi/perfi-backend/src/components/account-page.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logout } from './store/index';\n\nconst UserPage = props => {\n  const user = props.user,\n        handleClick = props.handleClick; // redirects to home page after successful login\n\n  if (!user.id) {\n    return React.createElement(Redirect, {\n      to: \"/home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"h100 w100 flex column align-items-center justify-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Welcome back \", user.email, \"!\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn bg-red white p1 rounded\",\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Logout\")));\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n}; // maps state of user to props\n\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    handleClick() {\n      dispatch(logout()).then(() => {\n        ownProps.history.push('/');\n      });\n    }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPage);","map":{"version":3,"sources":["/Users/uks/Desktop/PerFi/perfi-backend/src/components/account-page.js"],"names":["React","Redirect","connect","logout","UserPage","props","user","handleClick","id","email","mapStateToProps","state","mapDispatchToProps","dispatch","ownProps","then","history","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,MAAR,QAAqB,eAArB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA,QACnBC,IADmB,GACED,KADF,CACnBC,IADmB;AAAA,QACbC,WADa,GACEF,KADF,CACbE,WADa,EAG5B;;AACE,MAAI,CAACD,IAAI,CAACE,EAAV,EAAc;AACZ,WAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,yDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAkBF,IAAI,CAACG,KAAvB,MADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,6BAAlB;AAAgD,IAAA,OAAO,EAAEF,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAJF,CADF;AAUD,CAlBD;;AAoBA,MAAMG,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLL,IAAAA,IAAI,EAAEK,KAAK,CAACL;AADP,GAAP;AAGD,CAJD,C,CAMA;;;AACA,MAAMM,kBAAkB,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACjD,SAAO;AACLP,IAAAA,WAAW,GAAI;AACbM,MAAAA,QAAQ,CAACV,MAAM,EAAP,CAAR,CACGY,IADH,CACQ,MAAM;AACVD,QAAAA,QAAQ,CAACE,OAAT,CAAiBC,IAAjB,CAAsB,GAAtB;AACD,OAHH;AAID;;AANI,GAAP;AAQD,CATD;;AAWA,eAAef,OAAO,CAACQ,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CR,QAA7C,CAAf","sourcesContent":["import React from 'react'\nimport {Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {logout} from './store/index'\n\nconst UserPage = (props) => {\n  const {user, handleClick} = props\n\n// redirects to home page after successful login\n  if (!user.id) {\n    return <Redirect to='/home' />\n  }\n\n  return (\n    <div className='h100 w100 flex column align-items-center justify-center'>\n      <div className='flex'>\n        <h1>Welcome back {user.email}!</h1>\n      </div>\n      <div>\n        <button className='btn bg-red white p1 rounded' onClick={handleClick}>Logout</button>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\n// maps state of user to props\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    handleClick () {\n      dispatch(logout())\n        .then(() => {\n          ownProps.history.push('/')\n        })\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPage)\n"]},"metadata":{},"sourceType":"module"}