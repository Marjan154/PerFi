{"ast":null,"code":"import _objectSpread from \"/Users/marjanansar/PerFi/perfi-backend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport loggerMiddleware from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport axios from \"axios\";\nconst initialState = {\n  user: {}\n};\nconst GET_USER = \"GET_USER\";\nconst GET_ACCOUNT = \"GET_ACCOUNT\";\n\nconst gotMe = user => ({\n  type: GET_USER,\n  user\n});\n\nexport const getAccount = () => dispatch => {\n  return axios.get(\"http://localhost:3000/auth/account\").then(res => res.data).then(user => dispatch(gotMe(user))).catch(console.error.bind(console));\n}; // get user verification\n\nexport const getMe = () => dispatch => {\n  return axios.get(\"http://localhost:3000/auth/me\").then(res => res.data).then(user => dispatch(gotMe(user))).catch(console.error.bind(console));\n}; // for logging in, beginning session\n\nexport const login = formData => dispatch => {\n  return axios.put(\"http://localhost:3000/auth/login\", formData).then(res => res.data).then(user => dispatch(gotMe(user))).catch(console.error.bind(console));\n}; // for logging out, ending session\n\nexport const logout = () => dispatch => {\n  return axios.delete(\"/auth/logout\").then(() => dispatch(gotMe(initialState.user))).catch(console.error.bind(console));\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_USER:\n      return _objectSpread({}, state, {\n        user: action.user\n      });\n\n    case GET_ACCOUNT:\n      return _objectSpread({}, state, {\n        user: action.user\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default createStore(reducer, applyMiddleware(thunkMiddleware, loggerMiddleware));","map":{"version":3,"sources":["/Users/marjanansar/PerFi/perfi-backend/src/components/store/index.js"],"names":["createStore","applyMiddleware","loggerMiddleware","thunkMiddleware","axios","initialState","user","GET_USER","GET_ACCOUNT","gotMe","type","getAccount","dispatch","get","then","res","data","catch","console","error","bind","getMe","login","formData","put","logout","delete","reducer","state","action"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,gBAAP,MAA6B,cAA7B;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AADa,CAArB;AAIA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,WAAW,GAAG,aAApB;;AAEA,MAAMC,KAAK,GAAGH,IAAI,KAAK;AACrBI,EAAAA,IAAI,EAAEH,QADe;AAErBD,EAAAA;AAFqB,CAAL,CAAlB;;AAKA,OAAO,MAAMK,UAAU,GAAG,MAAMC,QAAQ,IAAI;AAC1C,SAAOR,KAAK,CACTS,GADI,CACA,oCADA,EAEJC,IAFI,CAECC,GAAG,IAAIA,GAAG,CAACC,IAFZ,EAGJF,IAHI,CAGCR,IAAI,IAAIM,QAAQ,CAACH,KAAK,CAACH,IAAD,CAAN,CAHjB,EAIJW,KAJI,CAIEC,OAAO,CAACC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,CAJF,CAAP;AAKD,CANM,C,CAQP;;AACA,OAAO,MAAMG,KAAK,GAAG,MAAMT,QAAQ,IAAI;AACrC,SAAOR,KAAK,CACTS,GADI,CACA,+BADA,EAEJC,IAFI,CAECC,GAAG,IAAIA,GAAG,CAACC,IAFZ,EAGJF,IAHI,CAGCR,IAAI,IAAIM,QAAQ,CAACH,KAAK,CAACH,IAAD,CAAN,CAHjB,EAIJW,KAJI,CAIEC,OAAO,CAACC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,CAJF,CAAP;AAKD,CANM,C,CAQP;;AACA,OAAO,MAAMI,KAAK,GAAGC,QAAQ,IAAIX,QAAQ,IAAI;AAC3C,SAAOR,KAAK,CACToB,GADI,CACA,kCADA,EACoCD,QADpC,EAEJT,IAFI,CAECC,GAAG,IAAIA,GAAG,CAACC,IAFZ,EAGJF,IAHI,CAGCR,IAAI,IAAIM,QAAQ,CAACH,KAAK,CAACH,IAAD,CAAN,CAHjB,EAIJW,KAJI,CAIEC,OAAO,CAACC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,CAJF,CAAP;AAKD,CANM,C,CAQP;;AACA,OAAO,MAAMO,MAAM,GAAG,MAAMb,QAAQ,IAAI;AACtC,SAAOR,KAAK,CACTsB,MADI,CACG,cADH,EAEJZ,IAFI,CAEC,MAAMF,QAAQ,CAACH,KAAK,CAACJ,YAAY,CAACC,IAAd,CAAN,CAFf,EAGJW,KAHI,CAGEC,OAAO,CAACC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,CAHF,CAAP;AAID,CALM;;AAOP,MAAMS,OAAO,GAAG,CAACC,KAAK,GAAGvB,YAAT,EAAuBwB,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACnB,IAAf;AACE,SAAKH,QAAL;AACE,+BACKqB,KADL;AAEEtB,QAAAA,IAAI,EAAEuB,MAAM,CAACvB;AAFf;;AAIF,SAAKE,WAAL;AACE,+BACKoB,KADL;AAEEtB,QAAAA,IAAI,EAAEuB,MAAM,CAACvB;AAFf;;AAIF;AACE,aAAOsB,KAAP;AAZJ;AAcD,CAfD;;AAiBA,eAAe5B,WAAW,CACxB2B,OADwB,EAExB1B,eAAe,CAACE,eAAD,EAAkBD,gBAAlB,CAFS,CAA1B","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport loggerMiddleware from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport axios from \"axios\";\n\nconst initialState = {\n  user: {}\n};\n\nconst GET_USER = \"GET_USER\";\nconst GET_ACCOUNT = \"GET_ACCOUNT\";\n\nconst gotMe = user => ({\n  type: GET_USER,\n  user\n});\n\nexport const getAccount = () => dispatch => {\n  return axios\n    .get(\"http://localhost:3000/auth/account\")\n    .then(res => res.data)\n    .then(user => dispatch(gotMe(user)))\n    .catch(console.error.bind(console));\n};\n\n// get user verification\nexport const getMe = () => dispatch => {\n  return axios\n    .get(\"http://localhost:3000/auth/me\")\n    .then(res => res.data)\n    .then(user => dispatch(gotMe(user)))\n    .catch(console.error.bind(console));\n};\n\n// for logging in, beginning session\nexport const login = formData => dispatch => {\n  return axios\n    .put(\"http://localhost:3000/auth/login\", formData)\n    .then(res => res.data)\n    .then(user => dispatch(gotMe(user)))\n    .catch(console.error.bind(console));\n};\n\n// for logging out, ending session\nexport const logout = () => dispatch => {\n  return axios\n    .delete(\"/auth/logout\")\n    .then(() => dispatch(gotMe(initialState.user)))\n    .catch(console.error.bind(console));\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_USER:\n      return {\n        ...state,\n        user: action.user\n      };\n    case GET_ACCOUNT:\n      return {\n        ...state,\n        user: action.user\n      };\n    default:\n      return state;\n  }\n};\n\nexport default createStore(\n  reducer,\n  applyMiddleware(thunkMiddleware, loggerMiddleware)\n);\n"]},"metadata":{},"sourceType":"module"}