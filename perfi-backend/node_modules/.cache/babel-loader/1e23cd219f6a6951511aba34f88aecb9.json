{"ast":null,"code":"import _objectSpread from \"/Users/marjanansar/PerFi/perfi-backend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { createStore, applyMiddleware } from 'redux';\nimport loggerMiddleware from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport axios from 'axios';\nconst initialState = {\n  user: {}\n};\nconst GET_USER = 'GET_USER';\nconst GET_ACCOUNT = 'GET_ACCOUNT';\n\nconst gotMe = user => ({\n  type: GET_USER,\n  user\n});\n\nexport const getAccount = () => dispatch => {\n  return axios.get('http://localhost:3000/auth/account').then(res => res.data).then(user => dispatch(gotMe(user))).catch(console.error.bind(console));\n}; // get user verification\n\nexport const getMe = () => dispatch => {\n  return axios.get('http://localhost:3000/auth/me').then(res => res.data).then(user => dispatch(gotMe(user))).catch(console.error.bind(console));\n}; // for logging in, beginning session\n\nexport const login = formData => dispatch => {\n  return axios.put('http://localhost:3000/auth/login', formData).then(res => res.data).then(user => dispatch(gotMe(user))).catch(console.error.bind(console));\n}; // for logging out, ending session\n\nexport const logout = () => dispatch => {\n  return axios.delete('/auth/logout').then(() => dispatch(gotMe(initialState.user))).catch(console.error.bind(console));\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_USER:\n      return _objectSpread({}, state, {\n        user: action.user\n      });\n\n    case GET_ACCOUNT:\n      return _objectSpread({}, state, {\n        user: action.user\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default createStore(reducer, applyMiddleware(thunkMiddleware, loggerMiddleware));","map":{"version":3,"sources":["/Users/marjanansar/PerFi/perfi-backend/src/components/store/index.js"],"names":["createStore","applyMiddleware","loggerMiddleware","thunkMiddleware","axios","initialState","user","GET_USER","GET_ACCOUNT","gotMe","type","getAccount","dispatch","get","then","res","data","catch","console","error","bind","getMe","login","formData","put","logout","delete","reducer","state","action"],"mappings":";AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,gBAAP,MAA6B,cAA7B;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AADa,CAArB;AAIA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,WAAW,GAAG,aAApB;;AAEA,MAAMC,KAAK,GAAIH,IAAD,KAAW;AACvBI,EAAAA,IAAI,EAAEH,QADiB;AAEvBD,EAAAA;AAFuB,CAAX,CAAd;;AAKA,OAAO,MAAMK,UAAU,GAAG,MAAMC,QAAQ,IAAI;AAC1C,SAAOR,KAAK,CAACS,GAAN,CAAU,oCAAV,EACJC,IADI,CACCC,GAAG,IAAIA,GAAG,CAACC,IADZ,EAEJF,IAFI,CAECR,IAAI,IAAIM,QAAQ,CAACH,KAAK,CAACH,IAAD,CAAN,CAFjB,EAGJW,KAHI,CAGEC,OAAO,CAACC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,CAHF,CAAP;AAID,CALM,C,CAQP;;AACA,OAAO,MAAMG,KAAK,GAAG,MAAMT,QAAQ,IAAI;AACrC,SAAOR,KAAK,CAACS,GAAN,CAAU,+BAAV,EACJC,IADI,CACCC,GAAG,IAAIA,GAAG,CAACC,IADZ,EAEJF,IAFI,CAECR,IAAI,IAAIM,QAAQ,CAACH,KAAK,CAACH,IAAD,CAAN,CAFjB,EAGJW,KAHI,CAGEC,OAAO,CAACC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,CAHF,CAAP;AAID,CALM,C,CAOP;;AACA,OAAO,MAAMI,KAAK,GAAIC,QAAD,IAAcX,QAAQ,IAAI;AAC7C,SAAOR,KAAK,CAACoB,GAAN,CAAU,kCAAV,EAA8CD,QAA9C,EACJT,IADI,CACCC,GAAG,IAAIA,GAAG,CAACC,IADZ,EAEJF,IAFI,CAECR,IAAI,IAAIM,QAAQ,CAACH,KAAK,CAACH,IAAD,CAAN,CAFjB,EAGJW,KAHI,CAGEC,OAAO,CAACC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,CAHF,CAAP;AAID,CALM,C,CAOP;;AACA,OAAO,MAAMO,MAAM,GAAG,MAAMb,QAAQ,IAAI;AACtC,SAAOR,KAAK,CAACsB,MAAN,CAAa,cAAb,EACJZ,IADI,CACC,MAAMF,QAAQ,CAACH,KAAK,CAACJ,YAAY,CAACC,IAAd,CAAN,CADf,EAEJW,KAFI,CAEEC,OAAO,CAACC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,CAFF,CAAP;AAGD,CAJM;;AAMP,MAAMS,OAAO,GAAG,CAACC,KAAK,GAAGvB,YAAT,EAAuBwB,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACnB,IAAf;AACE,SAAKH,QAAL;AACE,+BACKqB,KADL;AAEEtB,QAAAA,IAAI,EAAEuB,MAAM,CAACvB;AAFf;;AAIF,SAAKE,WAAL;AACE,+BACKoB,KADL;AAEEtB,QAAAA,IAAI,EAAEuB,MAAM,CAACvB;AAFf;;AAIF;AACE,aAAOsB,KAAP;AAZJ;AAcD,CAfD;;AAiBA,eAAe5B,WAAW,CAAC2B,OAAD,EAAU1B,eAAe,CAACE,eAAD,EAAkBD,gBAAlB,CAAzB,CAA1B","sourcesContent":["import {createStore, applyMiddleware} from 'redux'\nimport loggerMiddleware from 'redux-logger'\nimport thunkMiddleware from 'redux-thunk'\nimport axios from 'axios'\n\nconst initialState = {\n  user: {}\n}\n\nconst GET_USER = 'GET_USER'\nconst GET_ACCOUNT = 'GET_ACCOUNT'\n\nconst gotMe = (user) => ({\n  type: GET_USER,\n  user\n})\n\nexport const getAccount = () => dispatch => {\n  return axios.get('http://localhost:3000/auth/account')\n    .then(res => res.data)\n    .then(user => dispatch(gotMe(user)))\n    .catch(console.error.bind(console))\n}\n\n\n// get user verification\nexport const getMe = () => dispatch => {\n  return axios.get('http://localhost:3000/auth/me')\n    .then(res => res.data)\n    .then(user => dispatch(gotMe(user)))\n    .catch(console.error.bind(console))\n}\n\n// for logging in, beginning session\nexport const login = (formData) => dispatch => {\n  return axios.put('http://localhost:3000/auth/login', formData)\n    .then(res => res.data)\n    .then(user => dispatch(gotMe(user)))\n    .catch(console.error.bind(console))\n}\n\n// for logging out, ending session\nexport const logout = () => dispatch => {\n  return axios.delete('/auth/logout')\n    .then(() => dispatch(gotMe(initialState.user)))\n    .catch(console.error.bind(console))\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_USER:\n      return {\n        ...state,\n        user: action.user\n      }\n    case GET_ACCOUNT:\n      return {\n        ...state,\n        user: action.user\n      }\n    default:\n      return state\n  }\n}\n\nexport default createStore(reducer, applyMiddleware(thunkMiddleware, loggerMiddleware))\n"]},"metadata":{},"sourceType":"module"}